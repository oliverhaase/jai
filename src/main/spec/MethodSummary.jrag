aspect MethodSummary {

    syn MethodSummary Method.getMethodSummary() circular [initialMethodSummary()]; 

    eq Method.getMethodSummary() = ((ExitPoint) getInstruction(numChildren - 1)).getMethodSummary();

    syn MethodSummary ExitPoint.getMethodSummary() {
        Set<FieldEdge> fieldEdges = new HashSet<FieldEdge>();
        Set<ObjectNode> objectNodes = new HashSet<ObjectNode>();
        for (State state : statesIn()) {
            if (state instanceof RegularState) {
                fieldEdges.addAll(((RegularState) state).getFieldEdges().getEdges());
                if (method().getReturnType() instanceof ReferenceType)
                    objectNodes.addAll(((ReferenceSlot) ((RegularState) state).getOpStack().top())
                            .getObjects());
            }
        }
        if (method().getReturnType() instanceof PrimitiveType)
            return new MethodSummary(FieldEdges.getInstance().addAll(fieldEdges), PrimitiveSlot.getInstance());
        else
            return new MethodSummary(FieldEdges.getInstance().addAll(fieldEdges), new ReferenceSlot(
                objectNodes));
    }
    
    syn MethodSummary Method.initialMethodSummary() = new MethodSummary(FieldEdges.getInstance(), 
                                                            getReturnType().getInitialReturnValue());
    
    syn Slot TypeOrVoid.getInitialReturnValue();
    eq Void.getInitialReturnValue() = ReferenceSlot.getNullReference();
    eq ReferenceType.getInitialReturnValue() = new ReferenceSlot((ObjectNode) this);
    eq PrimitiveType.getInitialReturnValue() = PrimitiveSlot.getInstance();
    
    
}